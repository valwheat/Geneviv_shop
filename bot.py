import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import WebAppInfo, KeyboardButton, ReplyKeyboardMarkup
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN! –î–æ–±–∞–≤—å –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

# Set up logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# Create Web App button in chat
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üõç –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url="https://genaviv.tilda.ws/"))]
    ],
    resize_keyboard=True
)

# ‚úÖ Properly Register the Start Command
async def start_handler(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –õ–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ Genaviv.\n"
        "[–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω](https://t.me/Genaviv_Bot/Genaviv_Shop)",
        parse_mode="MarkdownV2",
        reply_markup=main_keyboard
    )

dp.message.register(start_handler, Command("start"))  # ‚úÖ Correct way to register handlers in aiogram v3

# ‚úÖ Handle incoming orders from Tilda
async def order_handler(message: types.Message):
    if "Order #" in message.text:
        user_id = message.chat.id  # Get user ID
        await bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")

dp.message.register(order_handler)  # ‚úÖ Properly register the order handler

# ‚úÖ Handle unknown messages (Optional)
async def unknown_message(message: types.Message):
    await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")

dp.message.register(unknown_message)  # ‚úÖ Catch all other messages

# ‚úÖ Fix Async Main Function
async def main():
    """Main function to start the bot."""
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
